/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@ionic/core';
import 'ionicons';
import {
  ImageStyle,
  Size,
  UploadStyle,
  UploadType,
} from './types/theme';
import {
  IEonInputItem,
} from './components/eon-form-builder/eon-form-builder.interface';
import {
  EonPrivacyPartnerInterface,
} from './components/eon-privacy-policy/eon-privacy-policy.interface';
import {
  EonProgressInterface,
} from './components/eon-progress/eon-progress.interface';


export namespace Components {

  interface EonButton {
    'buttonType': string;
    'color': string | undefined;
    'disabled': boolean;
    'enableToggle': boolean;
    'endLoading': () => void;
    'expand': 'block' | 'full' | undefined;
    'fill': 'clear' | 'default' | 'outline' | 'solid' | undefined;
    'href': string | undefined;
    'icon': string;
    'iconSize': string;
    'loading': boolean;
    'loadingColor': any;
    'loadingCurrent': number;
    'loadingMax': any;
    'loadingMin': any;
    'loadingType': 'bar' | 'spinner' | 'full' | 'center';
    'mode': 'ios' | 'md';
    'onClick': (event) => any;
    'preventDefault': boolean;
    'rightIcon': string;
    'routerDirection': 'back' | 'forward' | 'root';
    'setLoadingCurrent': (loadingCurrent: any) => void;
    'shape': 'round' | undefined;
    'size': Size | 'default' | 'large' | 'small' | undefined;
    'startLoading': () => void;
    'stop': boolean;
    'stopPropagation': boolean;
    'strong': boolean;
    'target': string;
    'toggle': () => void;
    'toggleLoading': () => void;
    'tooltip': string;
    'tooltipPosition': 'top' | 'bottom' | 'left' | 'right';
    'type': 'button' | 'reset' | 'submit';
  }
  interface EonButtonAttributes extends StencilHTMLAttributes {
    'buttonType'?: string;
    'color'?: string | undefined;
    'disabled'?: boolean;
    'enableToggle'?: boolean;
    'expand'?: 'block' | 'full' | undefined;
    'fill'?: 'clear' | 'default' | 'outline' | 'solid' | undefined;
    'href'?: string | undefined;
    'icon'?: string;
    'iconSize'?: string;
    'loading'?: boolean;
    'loadingColor'?: any;
    'loadingCurrent'?: number;
    'loadingMax'?: any;
    'loadingMin'?: any;
    'loadingType'?: 'bar' | 'spinner' | 'full' | 'center';
    'mode'?: 'ios' | 'md';
    'onClick'?: (event) => any;
    'onEonAction'?: (event: CustomEvent) => void;
    'preventDefault'?: boolean;
    'rightIcon'?: string;
    'routerDirection'?: 'back' | 'forward' | 'root';
    'shape'?: 'round' | undefined;
    'size'?: Size | 'default' | 'large' | 'small' | undefined;
    'stop'?: boolean;
    'stopPropagation'?: boolean;
    'strong'?: boolean;
    'target'?: string;
    'tooltip'?: string;
    'tooltipPosition'?: 'top' | 'bottom' | 'left' | 'right';
    'type'?: 'button' | 'reset' | 'submit';
  }

  interface EonCollapse {
    'accordion': boolean;
    'hide': (itemPosition: number) => void;
    'hideAll': () => void;
    'selected': number;
    'selector': string;
    'selectorContent': string;
    'selectorHeader': string;
    'show': (itemPosition: number) => void;
    'toggle': (itemPosition: number) => void;
  }
  interface EonCollapseAttributes extends StencilHTMLAttributes {
    'accordion'?: boolean;
    'onEonHide'?: (event: CustomEvent) => void;
    'onEonShow'?: (event: CustomEvent) => void;
    'selected'?: number;
    'selector'?: string;
    'selectorContent'?: string;
    'selectorHeader'?: string;
  }

  interface EonFlip {
    'flip': () => void;
    'flipButtonId': string;
    'flipSelector': string;
    'flipType': 'hover' | 'click' | 'button';
    'type': 'static' | 'flip' | 'pass';
    'visible': number;
  }
  interface EonFlipAttributes extends StencilHTMLAttributes {
    'flipButtonId'?: string;
    'flipSelector'?: string;
    'flipType'?: 'hover' | 'click' | 'button';
    'type'?: 'static' | 'flip' | 'pass';
    'visible'?: number;
  }

  interface EonFormBuilder {
    'value': IEonInputItem[];
  }
  interface EonFormBuilderAttributes extends StencilHTMLAttributes {
    'value'?: IEonInputItem[];
  }

  interface EonForm {
    'adapter': any;
    'allowUndefined': boolean;
    'bindSelector': string;
    'eonId': string | number;
    'errorSelector': string;
    'getValues': () => object;
    'handleUpload': boolean;
    'inputSelector': string;
    'path': string;
    'propertyNameAttribute': string;
    'refresh': boolean;
    'reset': () => void;
    'setValue': (value?: object) => void;
    'submit': () => void;
    'type': 'save' | 'update' | 'patch' | 'create' | 'custom';
    'uploadSelector': string;
    'value': object;
  }
  interface EonFormAttributes extends StencilHTMLAttributes {
    'adapter'?: any;
    'allowUndefined'?: boolean;
    'bindSelector'?: string;
    'eonId'?: string | number;
    'errorSelector'?: string;
    'handleUpload'?: boolean;
    'inputSelector'?: string;
    'onOnSubmit'?: (event: CustomEvent) => void;
    'path'?: string;
    'propertyNameAttribute'?: string;
    'refresh'?: boolean;
    'type'?: 'save' | 'update' | 'patch' | 'create' | 'custom';
    'uploadSelector'?: string;
    'value'?: object;
  }

  interface EonIcon {
    'animation': 'rock' | 'ring' | 'vertical' | 'horizontal' | 'flash' | 'bounce' | 'spin' | 'float' | 'pulse' | 'shake' | 'tada' | 'passing' | 'burst';
    'brand': 'fa' | 'nf' | 'ion' | '';
    'color': string;
    'fa': 'fas' | 'far' | 'fal' | 'fab' | '';
    'name': string;
    'rotate': number;
    'size': string;
    'src': string;
    'transition': 'none' | 'bounceIn' | 'bounceInDown' | 'bounceInLeft' | 'bounceInRight' |'bounceInUp' | 'fadeIn' | 'fadeInDown' | 'fadeInDownBig' | 'fadeInLeft' | 'fadeInLeftBig' | 'fadeInRight' | 'fadeInRightBig' | 'fadeInUp' | 'fadeInUpBig' | 'flipInX' | 'flipInY' | 'lightSpeedIn' | 'rotateIn' | 'rotateInDownLeft' | 'rotateInDownRight' | 'rotateInUpLeft' | 'rotateInUpRight' | 'rollIn' | 'zoomIn' | 'zoomInDown' | 'zoomInLeft' | 'zoomInRight' | 'zoomInUp' | 'slideInDown' | 'slideInLeft' | 'slideInRight' | 'slideInUp';
    'transitionDelay': string;
    'transitionPosition': 'top' | 'middle' | 'bottom';
    'type': 'static' | 'animated' | 'hover';
  }
  interface EonIconAttributes extends StencilHTMLAttributes {
    'animation'?: 'rock' | 'ring' | 'vertical' | 'horizontal' | 'flash' | 'bounce' | 'spin' | 'float' | 'pulse' | 'shake' | 'tada' | 'passing' | 'burst';
    'brand'?: 'fa' | 'nf' | 'ion' | '';
    'color'?: string;
    'fa'?: 'fas' | 'far' | 'fal' | 'fab' | '';
    'name'?: string;
    'rotate'?: number;
    'size'?: string;
    'src'?: string;
    'transition'?: 'none' | 'bounceIn' | 'bounceInDown' | 'bounceInLeft' | 'bounceInRight' |'bounceInUp' | 'fadeIn' | 'fadeInDown' | 'fadeInDownBig' | 'fadeInLeft' | 'fadeInLeftBig' | 'fadeInRight' | 'fadeInRightBig' | 'fadeInUp' | 'fadeInUpBig' | 'flipInX' | 'flipInY' | 'lightSpeedIn' | 'rotateIn' | 'rotateInDownLeft' | 'rotateInDownRight' | 'rotateInUpLeft' | 'rotateInUpRight' | 'rollIn' | 'zoomIn' | 'zoomInDown' | 'zoomInLeft' | 'zoomInRight' | 'zoomInUp' | 'slideInDown' | 'slideInLeft' | 'slideInRight' | 'slideInUp';
    'transitionDelay'?: string;
    'transitionPosition'?: 'top' | 'middle' | 'bottom';
    'type'?: 'static' | 'animated' | 'hover';
  }

  interface EonInput {
    'accept': string | undefined;
    'autoSize': boolean;
    'autocapitalize': string;
    'autocomplete': 'off' | 'on';
    'autocorrect': 'off' | 'on';
    'autofocus': boolean;
    'bind': any;
    'bindSelector': string;
    'clear': () => void;
    'clearInput': boolean;
    'clearOnEdit': boolean | undefined;
    'color': string | undefined;
    'cols': number | undefined;
    'debounce': number;
    'disabled': boolean;
    'errorMsg': string;
    'errorSelector': string;
    'getName': () => string;
    'getValue': () => any;
    'inputmode': string | undefined;
    'itemButton': boolean;
    'itemColor': string | undefined;
    'itemDetail': boolean | undefined;
    'itemDetailIcon': string;
    'itemDisabled': boolean;
    'itemHref': string | undefined;
    'itemLines': "full" | "inset" | "none" | undefined;
    'itemMode': "ios" | "md";
    'itemRouterDirection': "back" | "forward" | "root";
    'itemType': "button" | "reset" | "submit";
    'label': string;
    'labelColor': string | undefined;
    'labelMode': 'ios' | 'md';
    'labelPosition': 'floating' | 'fixed' | 'stacked' | undefined;
    'max': string | undefined;
    'maxlength': number | undefined;
    'min': string | undefined;
    'minlength': number | undefined;
    'mode': 'ios' | 'md';
    'multiple': boolean | undefined;
    'name': string;
    'pattern': string | undefined;
    'placeholder': null | string | undefined;
    'readonly': boolean;
    'required': boolean;
    'rows': number | undefined;
    'setFocus': () => void;
    'setValue': (value?: string) => void;
    'size': number | undefined;
    'spellcheck': boolean;
    'step': string | undefined;
    'successMsg': string;
    'textarea': boolean;
    'type': 'date' | 'email' | 'number' | 'password' | 'search' | 'tel' | 'text' | 'time' | 'url';
    'value': null | string | undefined | number;
    'wrap': 'hard' | 'off' | 'soft' | undefined;
  }
  interface EonInputAttributes extends StencilHTMLAttributes {
    'accept'?: string | undefined;
    'autoSize'?: boolean;
    'autocapitalize'?: string;
    'autocomplete'?: 'off' | 'on';
    'autocorrect'?: 'off' | 'on';
    'autofocus'?: boolean;
    'bind'?: any;
    'bindSelector'?: string;
    'clearInput'?: boolean;
    'clearOnEdit'?: boolean | undefined;
    'color'?: string | undefined;
    'cols'?: number | undefined;
    'debounce'?: number;
    'disabled'?: boolean;
    'errorMsg'?: string;
    'errorSelector'?: string;
    'inputmode'?: string | undefined;
    'itemButton'?: boolean;
    'itemColor'?: string | undefined;
    'itemDetail'?: boolean | undefined;
    'itemDetailIcon'?: string;
    'itemDisabled'?: boolean;
    'itemHref'?: string | undefined;
    'itemLines'?: "full" | "inset" | "none" | undefined;
    'itemMode'?: "ios" | "md";
    'itemRouterDirection'?: "back" | "forward" | "root";
    'itemType'?: "button" | "reset" | "submit";
    'label'?: string;
    'labelColor'?: string | undefined;
    'labelMode'?: 'ios' | 'md';
    'labelPosition'?: 'floating' | 'fixed' | 'stacked' | undefined;
    'max'?: string | undefined;
    'maxlength'?: number | undefined;
    'min'?: string | undefined;
    'minlength'?: number | undefined;
    'mode'?: 'ios' | 'md';
    'multiple'?: boolean | undefined;
    'name'?: string;
    'onEonBlur'?: (event: CustomEvent) => void;
    'onEonChange'?: (event: CustomEvent) => void;
    'onEonFocus'?: (event: CustomEvent) => void;
    'onEonInput'?: (event: CustomEvent) => void;
    'onEonInputDidLoad'?: (event: CustomEvent) => void;
    'onEonInputDidUnload'?: (event: CustomEvent) => void;
    'pattern'?: string | undefined;
    'placeholder'?: null | string | undefined;
    'readonly'?: boolean;
    'required'?: boolean;
    'rows'?: number | undefined;
    'size'?: number | undefined;
    'spellcheck'?: boolean;
    'step'?: string | undefined;
    'successMsg'?: string;
    'textarea'?: boolean;
    'type'?: 'date' | 'email' | 'number' | 'password' | 'search' | 'tel' | 'text' | 'time' | 'url';
    'value'?: null | string | undefined | number;
    'wrap'?: 'hard' | 'off' | 'soft' | undefined;
  }

  interface EonLoading {
    'adapter': any;
    'autoprogress': boolean;
    'color': string;
    'current': number;
    'duration': number;
    'frequency': 'indeterminate' | 'determinate' | 'regular' | 'ion' | undefined;
    'hide': () => void;
    'max': number;
    'message': string;
    'min': number;
    'modal': boolean;
    'modalOptions': any;
    'mode': 'ios' | 'md';
    'show': () => void;
    'size': Size;
    'toggle': () => void;
    'type': 'spinner' | 'bar';
  }
  interface EonLoadingAttributes extends StencilHTMLAttributes {
    'adapter'?: any;
    'autoprogress'?: boolean;
    'color'?: string;
    'current'?: number;
    'duration'?: number;
    'frequency'?: 'indeterminate' | 'determinate' | 'regular' | 'ion' | undefined;
    'max'?: number;
    'message'?: string;
    'min'?: number;
    'modal'?: boolean;
    'modalOptions'?: any;
    'mode'?: 'ios' | 'md';
    'onEonFinish'?: (event: CustomEvent) => void;
    'onEonStart'?: (event: CustomEvent) => void;
    'onEonUpdate'?: (event: CustomEvent) => void;
    'size'?: Size;
    'type'?: 'spinner' | 'bar';
  }

  interface EonModal {
    'animated': boolean;
    'backdropDismiss': boolean;
    'component': Function | HTMLElement | null | string;
    'componentProps': undefined | { [key: string]: any; };
    'cssClass': string | string[] | undefined;
    'dismiss': () => Promise<void>;
    'enterAnimation': any;
    'fit': boolean;
    'getModal': () => any;
    'isVisible': boolean;
    'keyboardClose': boolean;
    'leaveAnimation': any;
    'mode': "ios" | "md";
    'options': any;
    'position': 'left'
    | 'top'
    | 'right'
    | 'bottom'
    | 'center'
    | 'l'
    | 't'
    | 'r'
    | 'b'
    | 'c'
    | 'top left'
    | 'top right'
    | 'bottom left'
    | 'bottom right'
    | 'tl'
    | 'tr'
    | 'bl'
    | 'br';
    'present': (component?: string | Function | HTMLElement) => Promise<void>;
    'short': 'l' | 't' | 'r' | 'b' | 'tl' | 'tr' | 'bl' | 'br' | 'c';
    'size': 'tiny' | 'small' | 'medium' | 'large' | 'fluid' | 'full' | 's' | 'm' | 'l' | 'f' | 'xs' | 'sm' | 'md' | 'lg' | 'lg';
    'toggle': () => void;
    'type': 'fluid' | 'frame' | 'side' | 'central';
  }
  interface EonModalAttributes extends StencilHTMLAttributes {
    'animated'?: boolean;
    'backdropDismiss'?: boolean;
    'component'?: Function | HTMLElement | null | string;
    'componentProps'?: undefined | { [key: string]: any; };
    'cssClass'?: string | string[] | undefined;
    'enterAnimation'?: any;
    'fit'?: boolean;
    'isVisible'?: boolean;
    'keyboardClose'?: boolean;
    'leaveAnimation'?: any;
    'mode'?: "ios" | "md";
    'onEonModalDidDismiss'?: (event: CustomEvent) => void;
    'onEonModalDidPresent'?: (event: CustomEvent) => void;
    'onEonModalWillDismiss'?: (event: CustomEvent) => void;
    'onEonModalWillPresent'?: (event: CustomEvent) => void;
    'options'?: any;
    'position'?: 'left'
    | 'top'
    | 'right'
    | 'bottom'
    | 'center'
    | 'l'
    | 't'
    | 'r'
    | 'b'
    | 'c'
    | 'top left'
    | 'top right'
    | 'bottom left'
    | 'bottom right'
    | 'tl'
    | 'tr'
    | 'bl'
    | 'br';
    'short'?: 'l' | 't' | 'r' | 'b' | 'tl' | 'tr' | 'bl' | 'br' | 'c';
    'size'?: 'tiny' | 'small' | 'medium' | 'large' | 'fluid' | 'full' | 's' | 'm' | 'l' | 'f' | 'xs' | 'sm' | 'md' | 'lg' | 'lg';
    'type'?: 'fluid' | 'frame' | 'side' | 'central';
  }

  interface EonPrivacyPolicy {
    'advertising': EonPrivacyPartnerInterface[];
    'analytics': EonPrivacyPartnerInterface[];
    'appleStore': boolean;
    'braintree': boolean;
    'contacts': object[];
    'covers': string[];
    'effective': Date;
    'facebook': boolean;
    'firebase': boolean;
    'googleAdSense': boolean;
    'googleAdWords': boolean;
    'googleAdmob': boolean;
    'googleAnalytics': boolean;
    'googleStore': boolean;
    'kitchenSink': boolean;
    'legalName': string;
    'mobile': string;
    'payments': EonPrivacyPartnerInterface[];
    'paypal': boolean;
    'personalData': string[];
    'remarketing': EonPrivacyPartnerInterface[];
    'showHeader': boolean;
    'storage': EonPrivacyPartnerInterface[];
    'stripe': boolean;
    'twitter': boolean;
    'url': string;
  }
  interface EonPrivacyPolicyAttributes extends StencilHTMLAttributes {
    'advertising'?: EonPrivacyPartnerInterface[];
    'analytics'?: EonPrivacyPartnerInterface[];
    'appleStore'?: boolean;
    'braintree'?: boolean;
    'contacts'?: object[];
    'covers'?: string[];
    'effective'?: Date;
    'facebook'?: boolean;
    'firebase'?: boolean;
    'googleAdSense'?: boolean;
    'googleAdWords'?: boolean;
    'googleAdmob'?: boolean;
    'googleAnalytics'?: boolean;
    'googleStore'?: boolean;
    'kitchenSink'?: boolean;
    'legalName'?: string;
    'mobile'?: string;
    'payments'?: EonPrivacyPartnerInterface[];
    'paypal'?: boolean;
    'personalData'?: string[];
    'remarketing'?: EonPrivacyPartnerInterface[];
    'showHeader'?: boolean;
    'storage'?: EonPrivacyPartnerInterface[];
    'stripe'?: boolean;
    'twitter'?: boolean;
    'url'?: string;
  }

  interface EonProgress {
    'autoprogress': boolean;
    'classes': string;
    'color': string;
    'current': number | EonProgressInterface | EonProgressInterface[];
    'duration': number;
    'getProgress': () => any;
    'max': number;
    'message': string;
    'min': number;
    'type': 'indeterminate' | 'determinate' | 'regular' | 'ion';
  }
  interface EonProgressAttributes extends StencilHTMLAttributes {
    'autoprogress'?: boolean;
    'classes'?: string;
    'color'?: string;
    'current'?: number | EonProgressInterface | EonProgressInterface[];
    'duration'?: number;
    'max'?: number;
    'message'?: string;
    'min'?: number;
    'onEonComplete'?: (event: CustomEvent) => void;
    'type'?: 'indeterminate' | 'determinate' | 'regular' | 'ion';
  }

  interface EonSpinner {
    'color': string;
    'duration': number | undefined;
    'name': 'bubbles' | 'circles' | 'crescent' | 'dots' | 'lines' | 'lines-small' | undefined;
    'paused': boolean;
    'size': Size | 'fit';
    'type': 'indeterminate' | 'determinate' | 'regular' | 'graph' | 'ion';
  }
  interface EonSpinnerAttributes extends StencilHTMLAttributes {
    'color'?: string;
    'duration'?: number | undefined;
    'name'?: 'bubbles' | 'circles' | 'crescent' | 'dots' | 'lines' | 'lines-small' | undefined;
    'onEonComplete'?: (event: CustomEvent) => void;
    'paused'?: boolean;
    'size'?: Size | 'fit';
    'type'?: 'indeterminate' | 'determinate' | 'regular' | 'graph' | 'ion';
  }

  interface EonToast {
    'animated': boolean;
    'autoprogress': boolean;
    'background': string;
    'closeButtonText': string;
    'color': string;
    'cssClass': string;
    'duration': number;
    'enterAnimation': any;
    'icon': string;
    'iconSize': string;
    'keyboardClose': boolean;
    'leaveAnimation': any;
    'loading': boolean;
    'loadingColor': string;
    'loadingCurrent': number;
    'loadingMax': number;
    'loadingMin': number;
    'loadingType': 'bar' | 'spinner' | 'full' | 'center';
    'message': string;
    'mode': 'ios' | 'md';
    'position': 'bottom' | 'middle' | 'top';
    'showCloseButton': boolean;
    'translucent': boolean;
  }
  interface EonToastAttributes extends StencilHTMLAttributes {
    'animated'?: boolean;
    'autoprogress'?: boolean;
    'background'?: string;
    'closeButtonText'?: string;
    'color'?: string;
    'cssClass'?: string;
    'duration'?: number;
    'enterAnimation'?: any;
    'icon'?: string;
    'iconSize'?: string;
    'keyboardClose'?: boolean;
    'leaveAnimation'?: any;
    'loading'?: boolean;
    'loadingColor'?: string;
    'loadingCurrent'?: number;
    'loadingMax'?: number;
    'loadingMin'?: number;
    'loadingType'?: 'bar' | 'spinner' | 'full' | 'center';
    'message'?: string;
    'mode'?: 'ios' | 'md';
    'position'?: 'bottom' | 'middle' | 'top';
    'showCloseButton'?: boolean;
    'translucent'?: boolean;
  }

  interface EonTooltip {
    'background': string;
    'color': string;
    'text': string;
  }
  interface EonTooltipAttributes extends StencilHTMLAttributes {
    'background'?: string;
    'color'?: string;
    'text'?: string;
  }

  interface EonUpload {
    'accept': string;
    'adapter': any;
    'bindSelector': string;
    'clear': (event?: any) => void;
    'context': string;
    'engStyle': UploadStyle;
    'eonId': string;
    'errorMsg': string;
    'errorSelector': string;
    'getInputElement': () => HTMLInputElement;
    'imageStyle': ImageStyle;
    'mainImage': boolean;
    'method': string;
    'multiple': boolean;
    'name': string;
    'pause': () => void;
    'placeholder': string;
    'preview': boolean;
    'select': () => void;
    'setAdapter': (adapter: any, onlyIfMissing?: boolean) => any;
    'size': Size;
    'start': (event?: any, files?: any) => Promise<any[]>;
    'successMsg': string;
    'type': UploadType;
    'uploadOnSelect': boolean;
    'value': any;
  }
  interface EonUploadAttributes extends StencilHTMLAttributes {
    'accept'?: string;
    'adapter'?: any;
    'bindSelector'?: string;
    'context'?: string;
    'engStyle'?: UploadStyle;
    'eonId'?: string;
    'errorMsg'?: string;
    'errorSelector'?: string;
    'imageStyle'?: ImageStyle;
    'mainImage'?: boolean;
    'method'?: string;
    'multiple'?: boolean;
    'name'?: string;
    'onEonFileClear'?: (event: CustomEvent) => void;
    'onEonFileSelect'?: (event: CustomEvent) => void;
    'onEonUploadEnd'?: (event: CustomEvent) => void;
    'onEonUploadProgress'?: (event: CustomEvent) => void;
    'onEonUploadStart'?: (event: CustomEvent) => void;
    'placeholder'?: string;
    'preview'?: boolean;
    'size'?: Size;
    'successMsg'?: string;
    'type'?: UploadType;
    'uploadOnSelect'?: boolean;
    'value'?: any;
  }

  interface EonEngageHome {}
  interface EonEngageHomeAttributes extends StencilHTMLAttributes {}

  interface EonEngageRoot {}
  interface EonEngageRootAttributes extends StencilHTMLAttributes {}
}

declare global {
  interface StencilElementInterfaces {
    'EonButton': Components.EonButton;
    'EonCollapse': Components.EonCollapse;
    'EonFlip': Components.EonFlip;
    'EonFormBuilder': Components.EonFormBuilder;
    'EonForm': Components.EonForm;
    'EonIcon': Components.EonIcon;
    'EonInput': Components.EonInput;
    'EonLoading': Components.EonLoading;
    'EonModal': Components.EonModal;
    'EonPrivacyPolicy': Components.EonPrivacyPolicy;
    'EonProgress': Components.EonProgress;
    'EonSpinner': Components.EonSpinner;
    'EonToast': Components.EonToast;
    'EonTooltip': Components.EonTooltip;
    'EonUpload': Components.EonUpload;
    'EonEngageHome': Components.EonEngageHome;
    'EonEngageRoot': Components.EonEngageRoot;
  }

  interface StencilIntrinsicElements {
    'eon-button': Components.EonButtonAttributes;
    'eon-collapse': Components.EonCollapseAttributes;
    'eon-flip': Components.EonFlipAttributes;
    'eon-form-builder': Components.EonFormBuilderAttributes;
    'eon-form': Components.EonFormAttributes;
    'eon-icon': Components.EonIconAttributes;
    'eon-input': Components.EonInputAttributes;
    'eon-loading': Components.EonLoadingAttributes;
    'eon-modal': Components.EonModalAttributes;
    'eon-privacy-policy': Components.EonPrivacyPolicyAttributes;
    'eon-progress': Components.EonProgressAttributes;
    'eon-spinner': Components.EonSpinnerAttributes;
    'eon-toast': Components.EonToastAttributes;
    'eon-tooltip': Components.EonTooltipAttributes;
    'eon-upload': Components.EonUploadAttributes;
    'eon-engage-home': Components.EonEngageHomeAttributes;
    'eon-engage-root': Components.EonEngageRootAttributes;
  }


  interface HTMLEonButtonElement extends Components.EonButton, HTMLStencilElement {}
  var HTMLEonButtonElement: {
    prototype: HTMLEonButtonElement;
    new (): HTMLEonButtonElement;
  };

  interface HTMLEonCollapseElement extends Components.EonCollapse, HTMLStencilElement {}
  var HTMLEonCollapseElement: {
    prototype: HTMLEonCollapseElement;
    new (): HTMLEonCollapseElement;
  };

  interface HTMLEonFlipElement extends Components.EonFlip, HTMLStencilElement {}
  var HTMLEonFlipElement: {
    prototype: HTMLEonFlipElement;
    new (): HTMLEonFlipElement;
  };

  interface HTMLEonFormBuilderElement extends Components.EonFormBuilder, HTMLStencilElement {}
  var HTMLEonFormBuilderElement: {
    prototype: HTMLEonFormBuilderElement;
    new (): HTMLEonFormBuilderElement;
  };

  interface HTMLEonFormElement extends Components.EonForm, HTMLStencilElement {}
  var HTMLEonFormElement: {
    prototype: HTMLEonFormElement;
    new (): HTMLEonFormElement;
  };

  interface HTMLEonIconElement extends Components.EonIcon, HTMLStencilElement {}
  var HTMLEonIconElement: {
    prototype: HTMLEonIconElement;
    new (): HTMLEonIconElement;
  };

  interface HTMLEonInputElement extends Components.EonInput, HTMLStencilElement {}
  var HTMLEonInputElement: {
    prototype: HTMLEonInputElement;
    new (): HTMLEonInputElement;
  };

  interface HTMLEonLoadingElement extends Components.EonLoading, HTMLStencilElement {}
  var HTMLEonLoadingElement: {
    prototype: HTMLEonLoadingElement;
    new (): HTMLEonLoadingElement;
  };

  interface HTMLEonModalElement extends Components.EonModal, HTMLStencilElement {}
  var HTMLEonModalElement: {
    prototype: HTMLEonModalElement;
    new (): HTMLEonModalElement;
  };

  interface HTMLEonPrivacyPolicyElement extends Components.EonPrivacyPolicy, HTMLStencilElement {}
  var HTMLEonPrivacyPolicyElement: {
    prototype: HTMLEonPrivacyPolicyElement;
    new (): HTMLEonPrivacyPolicyElement;
  };

  interface HTMLEonProgressElement extends Components.EonProgress, HTMLStencilElement {}
  var HTMLEonProgressElement: {
    prototype: HTMLEonProgressElement;
    new (): HTMLEonProgressElement;
  };

  interface HTMLEonSpinnerElement extends Components.EonSpinner, HTMLStencilElement {}
  var HTMLEonSpinnerElement: {
    prototype: HTMLEonSpinnerElement;
    new (): HTMLEonSpinnerElement;
  };

  interface HTMLEonToastElement extends Components.EonToast, HTMLStencilElement {}
  var HTMLEonToastElement: {
    prototype: HTMLEonToastElement;
    new (): HTMLEonToastElement;
  };

  interface HTMLEonTooltipElement extends Components.EonTooltip, HTMLStencilElement {}
  var HTMLEonTooltipElement: {
    prototype: HTMLEonTooltipElement;
    new (): HTMLEonTooltipElement;
  };

  interface HTMLEonUploadElement extends Components.EonUpload, HTMLStencilElement {}
  var HTMLEonUploadElement: {
    prototype: HTMLEonUploadElement;
    new (): HTMLEonUploadElement;
  };

  interface HTMLEonEngageHomeElement extends Components.EonEngageHome, HTMLStencilElement {}
  var HTMLEonEngageHomeElement: {
    prototype: HTMLEonEngageHomeElement;
    new (): HTMLEonEngageHomeElement;
  };

  interface HTMLEonEngageRootElement extends Components.EonEngageRoot, HTMLStencilElement {}
  var HTMLEonEngageRootElement: {
    prototype: HTMLEonEngageRootElement;
    new (): HTMLEonEngageRootElement;
  };

  interface HTMLElementTagNameMap {
    'eon-button': HTMLEonButtonElement
    'eon-collapse': HTMLEonCollapseElement
    'eon-flip': HTMLEonFlipElement
    'eon-form-builder': HTMLEonFormBuilderElement
    'eon-form': HTMLEonFormElement
    'eon-icon': HTMLEonIconElement
    'eon-input': HTMLEonInputElement
    'eon-loading': HTMLEonLoadingElement
    'eon-modal': HTMLEonModalElement
    'eon-privacy-policy': HTMLEonPrivacyPolicyElement
    'eon-progress': HTMLEonProgressElement
    'eon-spinner': HTMLEonSpinnerElement
    'eon-toast': HTMLEonToastElement
    'eon-tooltip': HTMLEonTooltipElement
    'eon-upload': HTMLEonUploadElement
    'eon-engage-home': HTMLEonEngageHomeElement
    'eon-engage-root': HTMLEonEngageRootElement
  }

  interface ElementTagNameMap {
    'eon-button': HTMLEonButtonElement;
    'eon-collapse': HTMLEonCollapseElement;
    'eon-flip': HTMLEonFlipElement;
    'eon-form-builder': HTMLEonFormBuilderElement;
    'eon-form': HTMLEonFormElement;
    'eon-icon': HTMLEonIconElement;
    'eon-input': HTMLEonInputElement;
    'eon-loading': HTMLEonLoadingElement;
    'eon-modal': HTMLEonModalElement;
    'eon-privacy-policy': HTMLEonPrivacyPolicyElement;
    'eon-progress': HTMLEonProgressElement;
    'eon-spinner': HTMLEonSpinnerElement;
    'eon-toast': HTMLEonToastElement;
    'eon-tooltip': HTMLEonTooltipElement;
    'eon-upload': HTMLEonUploadElement;
    'eon-engage-home': HTMLEonEngageHomeElement;
    'eon-engage-root': HTMLEonEngageRootElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
